/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Layer0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F    &kp P      &kp B            &kp J      &kp L  &kp U      &kp Y    &kp SINGLE_QUOTE  &kp BSPC
&kp LCTRL  &kp A  &kp R  &kp S    &kp T      &kp G            &kp M      &kp N  &kp E      &kp I    &kp O             &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C    &kp D      &kp V            &kp K      &kp H  &kp COMMA  &kp DOT  &kp FSLH          &kp ESC
                         &kp TAB  &kp LSHFT  &kp BACKSPACE    &kp SPACE  &to 1  &kp RET
            >;
        };

        Layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp ESCAPE  &kp N7        &kp N8        &kp N9        &kp MINUS        &kp LEFT_BRACKET      &kp LEFT_PARENTHESIS  &kp UP_ARROW      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET      &kp BSPC
&bt BT_CLR  &kp GRAVE   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL        &kp LG(LEFT_BRACKET)  &kp LEFT              &kp DOWN          &kp RIGHT              &kp LG(RIGHT_BRACKET)  &trans
&kp LSHFT   &trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0           &kp C_VOL_DN          &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT             &kp C_VOL_UP           &trans
                                      &kp LGUI      &to 0         &kp BACKSPACE    &kp SPACE             &to 2                 &kp RET
            >;
        };

        Layer2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT        &kp CARET  &kp AMPS         &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans        &trans        &trans        &trans        &trans           &kp MINUS  &kp EQUAL        &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_CLR       &kp UNDER  &kp PLUS         &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                       &kp TAB       &to 0         &kp BACKSPACE    &kp SPACE  &kp KP_NUMBER_0  &kp RET
            >;
        };
    };
};
