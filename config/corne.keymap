/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q               &kp W         &kp F            &kp P        &kp B            &kp J      &kp L             &kp U             &kp Y         &mt APOS SEMICOLON  &none
&none  &hml RIGHT_SHIFT A  &hml LCTRL R  &hml LEFT_ALT S  &hml LGUI T  &kp G            &kp M      &hmr RIGHT_GUI N  &hmr RIGHT_ALT E  &hmr RCTRL I  &hmr RSHFT O        &none
&none  &kp Z               &kp X         &kp C            &kp D        &kp V            &kp K      &kp H             &kp COMMA         &kp DOT       &kp FSLH            &none
                                         &kp TAB          &kp LSHFT    &kp BACKSPACE    &kp SPACE  &to 1             &kp RET
            >;
        };

        Layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ESCAPE  &kp N7        &kp N8        &kp N9        &kp N0           &kp LEFT_BRACKET      &kp LEFT_PARENTHESIS  &kp UP_ARROW      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET      &none
&none  &kp GRAVE   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL        &kp LG(LEFT_BRACKET)  &kp LEFT              &kp DOWN          &kp RIGHT              &kp LG(RIGHT_BRACKET)  &none
&none  &kp DELETE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS        &kp C_VOL_DN          &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT             &kp C_VOL_UP           &none
                                 &kp LSHIFT    &to 0         &kp BACKSPACE    &kp SPACE             &to 2                 &kp RET
            >;
        };

        Layer2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none         &none         &none            &kp CARET  &kp AMPS         &kp ASTERISK  &kp LPAR  &kp RPAR  &none
&none  &none         &none         &none         &none         &none            &kp MINUS  &kp EQUAL        &kp LBKT      &kp RBKT  &kp BSLH  &none
&none  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_CLR       &kp UNDER  &kp PLUS         &kp LBRC      &kp RBRC  &kp PIPE  &none
                                   &kp TAB       &to 0         &kp BACKSPACE    &kp SPACE  &kp KP_NUMBER_0  &kp RET
            >;
        };
    };
};
